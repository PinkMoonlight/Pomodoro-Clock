{"version":3,"sources":["play.svg","laptop.svg","loop.svg","beep.mp3","pause.svg","coffee.svg","Pomodoro-clock.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pomodoro","props","minutes","Math","floor","seconds","timer","className","id","value","src","Laptop","alt","Play","onClick","pause","Loop","reset","decrement","session","increment","break","beep","App","state","isPaused","type","current","then","Date","getTime","displayTimer","countdownID","setInterval","secondsLeft","round","clearInterval","document","getElementById","innerHTML","play","setState","setTimeout","startTimer","console","log","setAttribute","Coffee","stopTimer","Pause","e","num","target","currentTime","this","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.03d79ad3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.75a39d29.svg\";","module.exports = __webpack_public_path__ + \"static/media/laptop.f88e183c.svg\";","module.exports = __webpack_public_path__ + \"static/media/loop.e9530715.svg\";","module.exports = __webpack_public_path__ + \"static/media/beep.8e387d86.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pause.810033e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/coffee.11c7d98a.svg\";","import React from 'react';\nimport Play from './play.svg';\nimport Laptop from './laptop.svg';\nimport Loop from './loop.svg';\nimport beep from './beep.mp3';\n\n\n\nlet Pomodoro = (props) => {\n\n    let minutes = Math.floor(props.seconds / 60);\n    let seconds = Math.floor(props.seconds % 60);\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n    seconds = seconds < 10 ? `0${seconds}` : seconds;\n    let timer = `${minutes}:${seconds}`;\n\n    return (\n        <div className=\"container\">\n        <h1 className=\"title\">Pomodoro Clock</h1>\n        <div className=\"timer-box\">\n          <div id=\"timer-label\">session</div>\n          <div id=\"time-left\" value={timer}>25:00</div>\n          <div>\n          <img id=\"timer-img\" src={Laptop} alt=\"laptop\" />\n          </div>\n        </div>\n        <div className=\"controls\">\n          <button className=\"start_stop\">\n            <img id=\"start_stop\" src={Play} alt=\"play/pause Logo\" onClick={props.pause}/>\n          </button>\n          <button className=\"reset\" >\n            <img id=\"reset\" src={Loop} alt=\"reset arrow loop\" onClick={props.reset}/>\n          </button>\n        </div>\n        <section className=\"increments\">\n          <div className=\"increments-left\">\n            <h5 id=\"session-label\">session length</h5>\n            <button className=\"adjust\" id=\"session-decrement\" value=\"session-decrement\" onClick={props.decrement}>-</button>\n            <div id=\"session-length\" value={props.session}>{props.session}</div>\n            <button className=\"adjust\" id=\"session-increment\" value=\"session-increment\" onClick={props.increment}>+</button>\n          </div> \n          <div className=\"increments-right\">\n          <h5 id=\"break-label\">break length</h5>\n            <button className=\"adjust\" id=\"break-decrement\" value=\"break-decrement\" onClick={props.decrement}>-</button>\n            <div id=\"break-length\" value={props.break}>{props.break}</div>\n            <button className=\"adjust\" id=\"break-increment\" value=\"break-increment\" onClick={props.increment}>+</button>\n          </div> \n        </section>\n        <audio id=\"beep\" src={beep}></audio>\n      </div>\n\n    )\n}\n\nexport default Pomodoro","import React, {Component} from 'react';\nimport Pomodoro from './Pomodoro-clock.js';\nimport Play from './play.svg';\nimport Pause from './pause.svg';\nimport Laptop from './laptop.svg';\nimport Coffee from './coffee.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    session: 25,\n    break: 5,\n    isPaused: true,\n    type: 'session',\n    current: 0  \n  }\n\n  timer = (seconds) => {\n      \n      let now = new Date().getTime();\n      let then = now + (seconds * 1000);\n      this.displayTimer(seconds);\n\n      this.countdownID = setInterval(() => {\n        const secondsLeft = Math.round((then - new Date().getTime()) / 1000);\n\n        if (secondsLeft === 0){\n          clearInterval(this.countdownID);\n          document.getElementById('time-left').innerHTML = `00:00`;\n          const type = this.state.type === 'session' ? 'break' : 'session';\n          document.getElementById('beep').play();\n\n          this.setState({\n            type: type,\n            current: 0\n          });\n          let typeID = setTimeout( () => {\n            this.startTimer();  \n            }, 1000);\n        }\n        this.displayTimer(secondsLeft);\n      }, 1000);\n\n  };\n\n  displayTimer = (seconds) => {\n    let secondsLeft = seconds;\n    let minutes = Math.floor(seconds / 60);\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n    seconds = seconds % 60;\n    seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n    document.getElementById('time-left').innerHTML = `${minutes}:${seconds}`;\n    this.setState({ \n      current: secondsLeft,\n    })\n  };\n\n  startTimer = () => {\n    let timer;\n    console.log(\"countdown begun\")  \n    if (this.state.isPaused !== true || this.state.current === 0) {\n      if (this.state.type === \"session\") {\n        timer = this.state.session;  \n        document.getElementById('timer-label').innerHTML = 'session';\n        document.getElementById('timer-img').setAttribute(\"src\", `${Laptop}`)\n      } else {\n        timer = this.state.break;\n        document.getElementById('timer-label').innerHTML = 'break';\n        document.getElementById('timer-img').setAttribute(\"src\", `${Coffee}`)\n      }\n    } else {\n      timer = this.state.current / 60;\n    }\n\n  let seconds = (timer * 60); /*this is what matters for when pausing, have to get stored data to pass in */\n    this.timer(seconds);\n  }\n\n  stopTimer = () => {\n    clearInterval(this.countdownID); \n  }\n\n\n  pause = () => {\n    let isPaused = this.state.isPaused;\n    if (isPaused) {\n      document.getElementById(\"start_stop\").setAttribute(\"src\", `${Pause}`)\n      this.startTimer();\n      this.setState({\n        isPaused: !isPaused\n      })\n    } else {\n      document.getElementById(\"start_stop\").setAttribute(\"src\", `${Play}`)\n      this.stopTimer();\n      this.setState({\n        isPaused: !isPaused,\n      })\n    }\n  };\n\n increment = e => {\n  let value = e.target.value;\n  let isPaused = this.state.isPaused;\n  let num;\n  let session = this.state.session;\n\n\n  if (isPaused) {\n    if (value === 'session-increment') {\n      num = session < 60 ? session + 1 : session;\n      document.getElementById('time-left').innerHTML = `${num < 10 ? '0' : ''}${num}:00`;\n      this.setState({\n        session: num, \n        current: 0\n      })\n    } else {\n      num = this.state.break < 60 ? this.state.break + 1 : this.state.break;\n      document.getElementById('time-left').innerHTML = this.state.type === 'break' ? `${num < 10 ? '0' : ''}${num}:00`: `${session < 10 ? '0' : ''}${session}:00`;\n      this.setState({\n        break: num,\n        current: 0\n      })\n    }\n  }\n };\n\n decrement = e => {\n  let value = e.target.value;\n  let isPaused = this.state.isPaused;\n  let num;\n  let session = this.state.session;\n\n  if (isPaused) {\n    if (value === 'session-decrement') {\n      num = session > 1 ? session - 1 : session;\n      document.getElementById('time-left').innerHTML = `${num < 10 ? '0' : ''}${num}:00`;\n      this.setState({\n        session: num,\n        current: 0\n      })\n    } else {\n      num = this.state.break > 1 ? this.state.break - 1 : this.state.break;\n      document.getElementById('time-left').innerHTML = this.state.type === 'break' ? `${num < 10 ? '0' : ''}${num}:00`: `${session < 10 ? '0' : ''}${session}:00`;\n      this.setState({\n        break: num,\n        current: 0\n      })\n    }\n  }\n };\n\n reset = e => {\n  console.log(\"reset occurred\");\n  this.stopTimer();\n  document.getElementById('timer-label').innerHTML = 'session';\n  document.getElementById(\"start_stop\").setAttribute(\"src\", `${Play}`);\n  let beep = document.getElementById('beep');\n  beep.pause();\n  beep.currentTime = 0;\n  document.getElementById('time-left').innerHTML = '25:00';\n  this.setState({\n    session: 25,\n    break: 5,\n    isPaused: true,\n    type: 'session',\n    current: 0\n  });\n}\n\n  render() {\n   return  (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Pomodoro \n          session={this.state.session}\n          break={this.state.break}\n          reset={this.reset}\n          increment={this.increment}\n          decrement={this.decrement}\n          pause={this.pause}\n          seconds={this.state.current}\n        />\n      </header>\n      <footer>\n        <p>\n          Designed and coded by{\" \"}\n          <a className=\"footer__name-link\" href=\"http://www.katecherie.com\">\n            Kate Fisher\n          </a>\n        </p>\n      </footer>\n    </div>\n  );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}